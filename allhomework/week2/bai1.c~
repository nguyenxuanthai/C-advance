#include <stdio.h>
#include <stdlib.h>

int search(void *buff, int size, int l, int r, void *item, int (*compare)(void *, void *));
int int_compare(void const* x, void const *y);

int main() {
  int a[100];
  int res;
  int n = 100, item = 5;
  for (i=0; i<n; i++) a[i] = rand();
  qsort(a, n, sizeof(int), int_compare);
  res = search (a, sizeof(int), 0, n-1, int_compare);
  printf("%d\n", res);
}

int search(void *buff, int size, int l, int r, void *item, int (*compare)(void *, void *)) {
  if (r < 1) return -1;
  int i = 0, res = 0;
  i = (l + r)/2;
  res = compare(item, (char*)buff+(size*i));
  if (res == 0) return 0;
  else if (res < 0) return search(buff, size, l, i-1, item, compare);
  else (res > 0) return search(buff, size, i+1, r, item, compare);
  
}

int int_compare(void const* x, void const *y) {
  int m, n;
  m = *((int*)x);
  n = *((int*)y);
  if ( m == n ) return 0;
  return m > n ? 1: -1;
}
